#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part*
Project 1
\end_layout

\begin_layout Standard
The aim of this project is to get familiar with various vector and matrix
 operations by solving the one-dimensional Poisson equation with Dirichlet
 boundary conditions:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-u''(x)=f(x)\text{ˏ      }x\text{ ∈ (0,1)}\text{ˏ     }u(0)=u(1)=0.
\]

\end_inset


\end_layout

\begin_layout Standard
In this project we have 
\begin_inset Formula $f(x)=100\exp(-10x)$
\end_inset

, and the equation has a closed-form slution given by 
\begin_inset Formula 
\[
u(x)=1-(1-\exp(-10)x-\exp(-10x).
\]

\end_inset

The Poisson equation can be solved by defining the discretized approximation
 to u as 
\begin_inset ERT
status open

\begin_layout Plain Layout

$v_i$
\end_layout

\end_inset

 with gridpoints 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_i=ih$
\end_layout

\end_inset

 in the nteval from 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_i=0$
\end_layout

\end_inset

 to 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_i=1$
\end_layout

\end_inset

, where h is the step length defined as 
\begin_inset ERT
status open

\begin_layout Plain Layout

$h=1/(n+1)$
\end_layout

\end_inset

.
 The boundary conditions then becomes 
\begin_inset ERT
status open

\begin_layout Plain Layout

$v_0=v_{n+1}=0$
\end_layout

\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$f(x_i)=f_i$
\end_layout

\end_inset

, the second derivative of u can be approximated by:
\begin_inset Formula 
\[
-\frac{v_{i+1}+v_{i-1}-2v_{i}}{h^{2}}=f_{i\text{}}\text{     for }i=1,2,...,n
\]

\end_inset


\end_layout

\begin_layout Standard
This can be writtenas a linear set of equations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
 & -\frac{v_{2}+v_{0}-2v_{1}}{h^{2}}=f_{1}\\
 & -\frac{v_{3}+v_{1}-2v_{2}}{h^{2}}=f_{2}\\
 & \cdots\\
 & -\frac{v_{n+1}+v_{n-1}-2v_{n}}{h^{2}}=f_{n}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
And by define 
\begin_inset Formula $\tilde{b}_{i}=h^{2}f_{i}$
\end_inset

, this can be rewritten:
\begin_inset Formula 
\begin{eqnarray*}
 & -v_{0}+2v_{1}-v_{2}=\tilde{b}_{1}\\
 & -v_{1}+2v_{2}-v_{3}=\tilde{b}_{2}\\
 & \cdots\\
 & -v_{i-1}+2v_{i}-v_{i+1}=\tilde{b}_{i}\\
 & \cdots\\
 & -v_{n-1}+2v_{n}-v_{n+1}=\tilde{b}_{n}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $v_{0}=v_{n+1}=0$
\end_inset

, this can then be written as: 
\begin_inset Formula 
\[
\mathbf{A\mathbf{v=\tilde{\mathbf{b}}}}
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $\mathbf{v}$
\end_inset

 is a vector containing the elements 
\begin_inset Formula $v_{i},\; i=1,...,n$
\end_inset

, 
\begin_inset Formula $\tilde{\mathbf{b}}$
\end_inset

 is a vector containing the elements 
\begin_inset Formula $\tilde{b}_{i},\; i=1,...,n$
\end_inset

 and 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is an 
\begin_inset Formula $n\times n$
\end_inset

 tridiagonal matrix:
\begin_inset Formula 
\begin{equation}
\mathbf{A}=\left(\begin{array}{cccccc}
2 & -1 & 0 & 0 & 0 & 0\\
-1 & 2 & -1 & 0 & 0 & \cdots\\
0 & -1 & 2 & -1 & 0 & \cdots\\
\cdots & \cdots & \cdots & \cdots & \cdots & \cdots\\
\cdots & \cdots & 0 & -1 & 2 & -1\\
0 & \cdots & \cdots & 0 & -1 & 2
\end{array}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Section*
Algorithms
\end_layout

\begin_layout Standard
To solve the Poisson equation as a linear equation, the matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is rewritten in terms of one-dimensional vectors a, b and c of length 1:n,
 and the equation reads:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{equation}     {
\backslash
bf A} = 
\backslash
left(
\backslash
begin{array}{cccccc}                            b_1& c_1 & 0 &
\backslash
dots   & 
\backslash
dots &
\backslash
dots 
\backslash

\backslash
                            a_2 & b_2 & c_2 &
\backslash
dots &
\backslash
dots &
\backslash
dots 
\backslash

\backslash
                            & a_3 & b_3 & c_3 & 
\backslash
dots & 
\backslash
dots 
\backslash

\backslash
                            & 
\backslash
dots   & 
\backslash
dots &
\backslash
dots   &
\backslash
dots & 
\backslash
dots 
\backslash

\backslash
                            &   &  &a_{n-2}  &b_{n-1}& c_{n-1} 
\backslash

\backslash
                            &    &  &   &a_n & b_n 
\backslash

\backslash
                       
\backslash
end{array} 
\backslash
right)
\backslash
left(
\backslash
begin{array}{c}                            v_1
\backslash

\backslash
                            v_2
\backslash

\backslash
                            
\backslash
dots 
\backslash

\backslash
                           
\backslash
dots  
\backslash

\backslash
                           
\backslash
dots 
\backslash

\backslash
                            v_n
\backslash

\backslash
                       
\backslash
end{array} 
\backslash
right)   =
\backslash
left(
\backslash
begin{array}{c}                            
\backslash
tilde{b}_1
\backslash

\backslash
                            
\backslash
tilde{b}_2
\backslash

\backslash
                            
\backslash
dots 
\backslash

\backslash
                            
\backslash
dots 
\backslash

\backslash
                           
\backslash
dots 
\backslash

\backslash
                            
\backslash
tilde{b}_n
\backslash

\backslash
                       
\backslash
end{array} 
\backslash
right).
 
\backslash
end{equation} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is the same as a set of linear equations on the form:
\begin_inset Formula 
\[
a_{i}v_{i-1}+b_{i}v_{i}+c_{i}v_{i+1}=\tilde{b}_{i}\quad for\quad i=1,2,\ldots,n
\]

\end_inset


\end_layout

\begin_layout Standard
These sets of equations can be solved by a simple algorithm that requires
 two steps, first a decomposition and forward substitution and then a backward
 substitution.
 The the general problem with a tridiagonal matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 can be solved by the following algorithm, where v is a vector containing
 the discrete approximations to u, 
\begin_inset Formula $v_{i}$
\end_inset

, f is a vector containing 
\begin_inset Formula $\tilde{b}_{i}=h^{2}f_{i}$
\end_inset

 and a, b and c is the vectors a, b and c from earlier.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={[Visual]C++},numbers=left"
inline false
status open

\begin_layout Plain Layout

btemp = b(1);     
\end_layout

\begin_layout Plain Layout

v(1) = f(1)/btemp;
\end_layout

\begin_layout Plain Layout

         
\end_layout

\begin_layout Plain Layout

//Decomposition and forward substitution     
\end_layout

\begin_layout Plain Layout

for(i=2 ; i <= n ; ++i)     
\end_layout

\begin_layout Plain Layout

	{         
\end_layout

\begin_layout Plain Layout

		temp(i) = c(i-1)/btemp;         
\end_layout

\begin_layout Plain Layout

		btemp = b(i) - a(i)*temp(i);         
\end_layout

\begin_layout Plain Layout

		v(i) = (f(i)-a(i)*v(i-1))/btemp;     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

   
\end_layout

\begin_layout Plain Layout

//backsubstitution     
\end_layout

\begin_layout Plain Layout

for(i = n-1 ; i >= 1 ; --i)     
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		v(i) -= temp(i+1)*v(i+1);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the special case in this project, 
\begin_inset Formula $a_{i}=c_{i}=-1,$
\end_inset

 for 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

 and 
\begin_inset Formula $b_{i}=b=2$
\end_inset

 for 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

 and the algorithm can be simplified to:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},numbers=left"
inline false
status open

\begin_layout Plain Layout

btemp = b;     
\end_layout

\begin_layout Plain Layout

v(1) = f(1)/btemp;
\end_layout

\begin_layout Plain Layout

         
\end_layout

\begin_layout Plain Layout

//Decomposition and forward substitution     
\end_layout

\begin_layout Plain Layout

for(i=2 ; i <= n ; ++i)     
\end_layout

\begin_layout Plain Layout

	{         
\end_layout

\begin_layout Plain Layout

		temp(i) = c/btemp;         
\end_layout

\begin_layout Plain Layout

		btemp = b + temp(i);         
\end_layout

\begin_layout Plain Layout

		v(i) = (f(i) + v(i-1))/btemp;     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

   
\end_layout

\begin_layout Plain Layout

//backsubstitution     
\end_layout

\begin_layout Plain Layout

for(i = n-1 ; i >= 1 ; --i)     
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		v(i) -= temp(i+1)*v(i+1);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To compute the relative error the following algorithm is used:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={C++},numbers=left"
inline false
status open

\begin_layout Plain Layout

for (i=1; i<=n; ++i)
\end_layout

\begin_layout Plain Layout

   {
\end_layout

\begin_layout Plain Layout

    epsilon(i) = log10(abs((v(i)-u(i))/u(i)))
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\end_inset


\end_layout

\begin_layout Section*
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Results
\end_layout

\begin_layout Standard
Figure 1 shows the result from the algorithm for solving the set of linear
 equations.
 This is an algorithm that only needs an order of 6n floating point operations,
 which is a small number compared to gaussian elimination 
\begin_inset Formula $\left(\frac{2}{3}n^{3}\right)$
\end_inset

 and LU-decomposition 
\begin_inset Formula $\left(n^{2}\right)$
\end_inset

.
 From the figure you can see that even with n=10 it is quite acurate, and
 for n=100 and n = 1000 it s a very good overlap between the analytical
 and the numerical solution.
 This can also be seen in table 1.
 This table contains the relative error of the approximated slution compared
 to the known analytical solution.
 This shows that there is small errors, but that it also is getting smaller
 when the number of steps increases and the steplength decreases.
 Finally in Table 2 I compared the time my algorithm used on this spesifick
 problem.
 For n = 10 and n = 100 the time is too short for the system to be able
 to measure it, but for n = 1000 the LU decomposition use longer time.
 Remembering the different number of floating point operations(
\begin_inset Formula $\sim6n$
\end_inset

 for my algorithm and 
\begin_inset Formula $\sim n^{2}$
\end_inset

 for LU decomposition) the LU-decomposition needs more time.
 
\end_layout

\begin_layout Standard
The LU-decomposition is not able to run with 
\begin_inset Formula $n=10^{5}$
\end_inset

, there is not enough memory.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/Yngvil/Dropbox/compfys/project1/Release/project1.png

\end_inset


\end_layout

\begin_layout Plain Layout
Figure 1: Analytical and numerical solution for different n.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum error:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-1.1797}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-3.08804}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-5.08005}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-7.07936}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-9.0049}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Table 1: Maximum relative error for different steplenght h (h=1/n+1)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
my algoritm [s]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LU-decomposition [s]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.95
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Table 2: Time the different algorithms uses with different n.
\end_layout

\end_body
\end_document
